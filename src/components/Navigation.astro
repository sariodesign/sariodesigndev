---
interface Link {
    label: string,
    url: string
}

interface Navigation extends Array<Link>{}

const NavigationLinks:Navigation = [
    {
        label: 'About me',
        url: '/about-me',
    },
    {
        label: 'Playground',
        url: '/playground',
    }
];
---
<nav class="js-menu">
    <button class="btn-menu js-btn-menu">Open menu</button>
    <div class="nav-menu">
        { NavigationLinks.map((link, i, arr) => {
            console.log(link)
            return <a href={link.url} data-astro-reload>{link.label}</a>
            })
        }
    </div>            
</nav>

<script>
    const navMenu = document.querySelector('.js-menu');
    const btnMenu = document.querySelector('.js-btn-menu');

    btnMenu.addEventListener('click', () => {
        navMenu.classList.toggle('is-opened');
    })
</script>

<style lang="scss">
nav {
    &:after {
        background-color: rgba(0,0,0,.75);
        content: '';
        left: 0;
        height: 100vh;
        position: absolute;
        top: 0;
        width: 100%;
        transition: opacity 2s ease-in, visibility .25s linear .125s;
        visibility: hidden;
        z-index: 0;

        @media screen and (min-width: 1024px) {
            display: none;
        }
    }

    &.is-opened {
        &:after {
            opacity: 1;
            visibility: visible;
        }
    }
}

.nav-menu {
    background-color: var(--white);
    align-items: center;
    display: flex;
    gap: 48px;
    flex-direction: column;
    height: 25vh;
    left: 0;
    justify-content: center;
    opacity: 0;
    padding: 64px 0;
    position: absolute;
    top: 0;
    transition: transform .35s linear .125s, opacity .25s ease-in, visibility .5s linear;
    transform: translateY(-25vh);
    visibility: hidden;
    width: 100%;
    z-index: 1;

    .is-opened & {
        opacity: 1;
        transform: translateY(0);
        visibility: visible;
    }

    @media screen and (min-width: 1024px) {
        background-color: transparent;
        display: flex;
        column-gap: 16px;
        flex-direction: row;
        height: auto;
        opacity: 1;
        padding: 0;
        position: relative;
        transform: none;
        visibility: visible;
    }

    
}

.btn-menu {
    position: relative;
    z-index: 2;
    @media screen and (min-width: 1024px) {
        display: none;
    }
}

a {
    font-weight: 700;
    text-transform: uppercase;
    text-decoration: none;
    transition: all .25s ease-in-out;

    &:hover {
        opacity: .5;
    }

    @media (prefers-color-scheme: dark) {
        color: var(--light-gray);
    }

    @media (prefers-color-scheme: light) {
        color: var(--dark-black);
    }
}     

</style>